#
# Copyright 2016-2017 Blockie AB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
_clone:
    @clone: os
@include: |/_clone/

_info:
    title: Docker container management.

_dep_install:
    _info:
        title: Verify dependencies for this module.
        desc: |
            If docker is not already installed it will
            download and install the latest Docker Engine from Docker and
            add the targetuser to the docker group.
    _env:
        - targetuser:
            value: ${targetuser:-${SSHUSER:-$USER}}
        - RUN: DOCKER_DEP_INSTALL -- "${targetuser}"

install:
    _info:
        title: Install the latest Docker Engine.
        desc: |
            Downloads and installs the latest Docker Engine from Docker.
            Also adds the targetuser to the docker group.
            Will reinstall if already installed.
    _env:
        - targetuser:
            value: ${targetuser:-${SSHUSER:-$USER}}
        - SPACE_ARGS:
            arguments:
                -
                    values:
                        - targetuser
        - RUN: DOCKER_INSTALL -- "${targetuser}"

run:
    _info:
        title: Run a container
    _env:
        - image:
            title: Docker Image
        - container:
            title: Optional name to give container
        - flags:
            title: Optional flags
        - cmd:
            title: Command to run, defaults to "sh -c" if empty and arguments are given.
        - args:
            title: Arguments to pass to shell, leave blank for interactive shell.
        - SPACE_ARGS:
            arguments:
                -
                    values:
                        - alpine
                        - debian
                        - ubuntu
                -
                    values:
                        - mycontainer
                -
                    values:
                        - "-ti"
                -
                    values:
                        - cmd
                -
                    values:
                        - arguments
        - RUN: DOCKER_RUN -- "${image-}" "${container-}" "${flags-}" "${cmd-}" "${args-}"

ls_by_status:
    _info:
        title: List container(s) by their status
    _env:
        - status:
            value: ${status:-Up}
            values:
                - Up
                - Exited
                - Created
        - SPACE_ARGS:
            arguments:
                -
                    values:
                        - Up
                        - Exited
                        - Created
        - RUN: DOCKER_LS_BY_STATUS -- "${status}"

rm_by_status:
    _info:
        title: Remove container(s) by their status
    _env:
        - status:
            value: ${status:-Exited}
            values:
                - Up
                - Exited
                - Created
        - SPACE_ARGS:
            arguments:
                -
                    values:
                        - Up
                        - Exited
                        - Created
        - RUN: DOCKER_RM_BY_STATUS -- "${status}"

rm_by_id:
    @prefix: @{PARENTPATH}
    @dotdot: prefix
    _info:
        title: Remove container(s) by their id
    _env:
        - container:
            completion: @{prefix}_list_ids/
        - SPACE_ARGS:
            arguments:
                -
                    completion: @{prefix}_list_ids/
        - RUN: DOCKER_RM_BY_ID -- ${container}

rm_by_name:
    @prefix: @{PARENTPATH}
    @dotdot: prefix
    _info:
        title: Remove container(s) by their name
    _env:
        - container:
            completion: @{prefix}_list_names/
        - SPACE_ARGS:
            arguments:
                -
                    completion: @{prefix}_list_names/
        - RUN: DOCKER_RM_BY_ID -- ${container}

rmi_all:
    _info:
        title: Remove all docker images
    _env:
        - RUN: DOCKER_RMI_ALL

enter:
    @prefix: @{PARENTPATH}
    @dotdot: prefix
    _info:
        title: Enter a running container.
    _env:
        - container:
            completion: @{prefix}_list_names_running/
        - shell:
            values:
                - sh
                - bash
        - SPACE_ARGS:
            arguments:
                -
                    completion: @{prefix}_list_names_running/
                -
                    values:
                        - sh
                        - bash
        - RUN: DOCKER_ENTER -- "${container-}" "${shell-}"

ps:
    _info:
        title: List containers.
    _env:
        - RUN: DOCKER_PS

exec_wrap:
    @prefix: @{PARENTPATH}
    @dotdot: prefix
    _info:
        title: Exec a command inside an existing container
    _env:
        - flags:
            value: ${flags--ti}
        - container:
            completion: @{prefix}_list_names_running/
        - cmd:
            desc: Command to execute inside container which will execute the RUN variable, leave blank for default.
        - SPACE_WRAP: DOCKER_EXEC_WRAP

run_wrap:
    _info:
        title: Exec a command inside a temporary container
    _env:
        - image:
            value: ${image:-alpine}
        - flags:
            value: ${flags---rm -ti}
        - container:
            desc: The name to give the new continer, optional.
        - cmd:
            desc: Command to execute inside container which will execute the RUN variable, leave blank for default.
        - SPACE_WRAP: DOCKER_RUN_WRAP

_list_ids:
    @include: |/ps/
    _env:
        - SPACE_ARGS: -a -q -|
        - SPACE_REDIR: "2>/dev/null"
        - SPACE_MUTE_EXIT: 1
        - SPACE_LOG_LEVEL: 0

_list_names:
    @include: |/ps/
    _env:
        - SPACE_ARGS: -a --format="{{.Names}}" -|
        - SPACE_REDIR: "2>/dev/null"
        - SPACE_MUTE_EXIT: 1
        - SPACE_LOG_LEVEL: 0

_list_names_running:
    @include: |/ps/
    _env:
        - SPACE_ARGS: --format="{{.Names}}" -|
        - SPACE_REDIR: "2>/dev/null"
        - SPACE_MUTE_EXIT: 1
        - SPACE_LOG_LEVEL: 0
...
